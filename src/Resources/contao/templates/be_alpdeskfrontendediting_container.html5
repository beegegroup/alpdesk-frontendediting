<div id="alpdesk-fee-backendcontainer">
  <div id="alpdesk-fee-frame-legend">
    <div class="w33 widget">
      <select id="getdevice" class="tl_select">
        <option value="desktop">Desktop</option>
        <option value="tablet">Tablet</option>
        <option value="tablet_landscape">Tablet landscape</option>
        <option value="phone">Phone</option>
        <option value="phone_landscape">Phone landscape</option>
      </select>
      <button title="<?= $GLOBALS['TL_LANG']['alpdeskfee_backend_lables']['device_select'] ?>" id="setdevice" class="tl_submit">
        <img src="system/themes/flexible/icons/published.svg">
      </button>
      <div class="clear"></div>
      <div id="devicedimensoninfocontainer">
        <span id="devicedimensoninfo">-</span>
      </div>
    </div>
    <div class="wx60 widget">
      <form method="post">
        <input type="hidden" name="REQUEST_TOKEN" value="<?= $this->token ?>">
        <input type="hidden" name="toggleFullsize" value="1">
        <button title="<?= $GLOBALS['TL_LANG']['alpdeskfee_backend_lables']['fullscreen'] ?>" id="fullsize" class="tl_submit">
          <img width="15" src="bundles/alpdeskfrontendediting/images/fullsize.png">
        </button>
      </form>
      <form method="post" class="livemodus_form">
        <input type="hidden" name="REQUEST_TOKEN" value="<?= $this->token ?>">
        <input type="hidden" name="toggleLivemodus" value="1">
        <button title="<?= $GLOBALS['TL_LANG']['alpdeskfee_backend_lables']['live_mode'] ?>" id="<?= ($this->livemodus === true ? 'livemodeactive' : 'livemode') ?>" class="tl_submit">
          <img src="system/themes/flexible/icons/preview.svg">
        </button>
      </form>
      <button title="<?= $GLOBALS['TL_LANG']['alpdeskfee_backend_lables']['page_select'] ?>" id="pageselect" class="tl_submit">
        <img src="system/themes/flexible/icons/root.svg">
      </button>
      <button title="<?= $GLOBALS['TL_LANG']['alpdeskfee_backend_lables']['refresh_frame'] ?>" id="seturl" class="tl_submit">
        <img width="18" src="bundles/alpdeskfrontendediting/images/refresh.png">
      </button>
      <input id="urlparam" value="" class="tl_text">
      <strong>/preview.php/</strong>
    </div>
    <div class="clear"></div>
  </div>
  <div id="alpdesk-fee-frame-container" data-base="<?= $this->base ?>">
    <app-alpdeskfee base="<?= $this->base ?>" rt="<?= $this->token ?>" frameheight="100%" frameurl="<?= $this->url ?>"></app-alpdeskfee>
    <style type="text/css">@font-face{font-family:'Material Icons';font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v70/flUhRq6tzZclQEJ-Vdg-IuiaDsNcIhQ8tQ.woff2) format('woff2');}.material-icons{font-family:'Material Icons';font-weight:normal;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-feature-settings:'liga';-webkit-font-smoothing:antialiased;}</style>
    <script>
      // Because Mootools das Array.from = Array.convert and this is not compatible with ECMAScript6
      (function () {
        Array.from = (function () {
          var toStr = Object.prototype.toString;
          var isCallable = function (fn) {
            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';
          };
          var toInteger = function (value) {
            var number = Number(value);
            if (isNaN(number)) {
              return 0;
            }
            if (number === 0 || !isFinite(number)) {
              return number;
            }
            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
          };
          var maxSafeInteger = Math.pow(2, 53) - 1;
          var toLength = function (value) {
            var len = toInteger(value);
            return Math.min(Math.max(len, 0), maxSafeInteger);
          };

          // The length property of the from method is 1.
          return function from(arrayLike/*, mapFn, thisArg */) {
            // 1. Let C be the this value.
            var C = this;

            // 2. Let items be ToObject(arrayLike).
            var items = Object(arrayLike);

            // 3. ReturnIfAbrupt(items).
            if (arrayLike == null) {
              throw new TypeError('Array.from requires an array-like object - not null or undefined');
            }

            // 4. If mapfn is undefined, then let mapping be false.
            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;
            var T;
            if (typeof mapFn !== 'undefined') {
              // 5. else
              // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.
              if (!isCallable(mapFn)) {
                throw new TypeError('Array.from: when provided, the second argument must be a function');
              }

              // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.
              if (arguments.length > 2) {
                T = arguments[2];
              }
            }

            // 10. Let lenValue be Get(items, "length").
            // 11. Let len be ToLength(lenValue).
            var len = toLength(items.length);

            // 13. If IsConstructor(C) is true, then
            // 13. a. Let A be the result of calling the [[Construct]] internal method
            // of C with an argument list containing the single item len.
            // 14. a. Else, Let A be ArrayCreate(len).
            var A = isCallable(C) ? Object(new C(len)) : new Array(len);

            // 16. Let k be 0.
            var k = 0;
            // 17. Repeat, while k < lenâ€¦ (also steps a - h)
            var kValue;
            while (k < len) {
              kValue = items[k];
              if (mapFn) {
                A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);
              } else {
                A[k] = kValue;
              }
              k += 1;
            }
            // 18. Let putStatus be Put(A, "length", len, true).
            A.length = len;
            // 20. Return A.
            return A;
          };
        }());
      })();
    </script>
    <script src="bundles/alpdeskfrontendediting/js/angular/alpdeskfee-elements.js?v=<?= time() ?>"></script>
  </div>
  <div id="alpdesk-fee-alpdeskloading"></div>
</div>
